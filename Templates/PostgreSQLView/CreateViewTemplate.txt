@{
//コード生成に必要な一時変数をまとめて定義する

  // VIEW名称
  string TargetViewName = Model.TemplateFilesConfig.HeadPrefix + Model.SiteDefinition.SiteVariableName ;
}

--  [注意]
--  自動生成されたコードです。
--  変更時には十分注意して変更してください。
--
--  [生成コマンド]
--  https://github.com/yamada28go/HackPleasanterApiCli
--
--  [生成元テンプレートファイル]
--  https://github.com/yamada28go/HackPleasanterApi.PostgreSQL

-- @Raw(Model.SiteDefinition.Title) ビュー
DROP VIEW IF EXISTS "V_@Raw(TargetViewName)"; 

CREATE VIEW "V_@Raw(TargetViewName)" as 
SELECT
  "SiteId"
  , "UpdatedTime"
  , "ResultId"
  , "ResultId" as "@Raw(TargetViewName)Id"
  , "Ver"
  , "Title"
  , "Body"
  , "Status"
  , "Manager"
  , "Owner"
  , "Locked"
  -- ユーザー定義項目
  
    @* AttachmentsHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.AttachmentsHash) {
        <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
   }

    @* CheckHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.CheckHash) {
        <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
   }

    @* ClassHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.ClassHash) {
         <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
    }

    @* DateHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.DateHash) {
         <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
    }


    @* DescriptionHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.DescriptionHash) {
         <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
    }

    @* NumHashの出力定義 *@
    @foreach (var item in Model.ClassifiedInterface.NumHash) {
         <text>
              , "@item.ColumnName" as "@Raw(@item.VariableName)" -- @Raw(item.LabelText)
         </text>
    }

   -- ユーザー定義項目
  , "Comments"
  , "Creator"
  , "Updator"
  , "CreatedTime"
FROM
  "public"."Results" 
where
  "SiteId" = @(Model.SiteDefinition.SiteId); 


-- @Raw(Model.SiteDefinition.Title) ビュー バージョンが最大の列を選択
DROP VIEW IF EXISTS "V_@Raw(TargetViewName)_LatestVersion"; 
CREATE VIEW "V_@Raw(TargetViewName)_LatestVersion" as 
SELECT
    ranked.*
FROM
    ( 
        SELECT
            *
            , ROW_NUMBER() OVER (PARTITION BY "ResultId" ORDER BY "Ver" DESC) as rn 
        FROM
            "V_@Raw(TargetViewName)"
    ) as ranked 
WHERE
    rn = 1;
